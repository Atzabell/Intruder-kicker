# ---------- MonitorPuertos.ps1 ----------

$tempPath = "$env:TEMP\monitor_temp_script.ps1"

$inner = @'
$Host.UI.RawUI.WindowTitle = "Monitor de Puertos"

for ($pct = 0; $pct -le 100; $pct += 10) {
    Write-Progress -Activity 'Inicializando escaneo' `
                   -Status "$pct% completado" `
                   -PercentComplete $pct
    Start-Sleep -Milliseconds 150
}
Write-Progress -Activity 'Inicializando escaneo' -Completed
Write-Host

$netstatOut = netstat -nao

$header = ($netstatOut | Where-Object { $_ -match '^\s*Proto' } | Select-Object -First 1).TrimEnd()
$sep    = '-' * $header.Length

$conxLines = $netstatOut | Where-Object { $_ -match '\sESTABLISHED\s' }

Write-Host 'Intruder Kicker(by: kovax00)'
Write-Host '-----------------------------' 
Write-Host $header
Write-Host $sep
$conxLines | ForEach-Object { Write-Host $_ }

$selPID = Read-Host 'Introduce el PID de la conexión que deseas investigar'

try {
    $proc = Get-Process -Id $selPID -ErrorAction Stop
    $ruta = if ($proc.Path) { $proc.Path } else {
        (Get-CimInstance Win32_Process -Filter "ProcessId=$selPID").ExecutablePath
    }
} catch {
    Write-Host 'PID no válido o proceso finalizado.' -ForegroundColor Red
    Read-Host 'ENTER para salir'
    exit
}

$conxPID = $conxLines | Where-Object { ($_ -split '\s+')[-1] -eq $selPID }

Write-Host "`nConexiones asociadas al PID ${selPID}:`n"
Write-Host $header
Write-Host $sep
$conxPID | ForEach-Object { Write-Host $_ }

Write-Host "`nRuta del ejecutable:`n$ruta" -ForegroundColor Green
Read-Host 'ENTER para salir'
'@

Set-Content -Path $tempPath -Value $inner -Encoding UTF8

Start-Process powershell -WindowStyle Normal `
    -ArgumentList @('-NoExit','-ExecutionPolicy','Bypass','-File',$tempPath)
